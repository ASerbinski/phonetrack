image: ubuntu:20.04

stages:
  - test
  - deploy
  - build

before_script:
- bash ci/docker_install.sh

services:
  - mariadb:latest
  - postgres:14

variables:
  MYSQL_DATABASE: nextcloud
  MYSQL_USER: root
  MYSQL_ROOT_PASSWORD: mysql
  POSTGRES_DB: nextcloud
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres


# test and produce coverage report
test_nc_sqlite:
  image: php:7.4
  stage: test
  only:
    refs:
      - master
      - test
  artifacts:
    paths:
      - coverage
  coverage: '/^\s*Lines:\s*(\d+.\d+)\%/'
  script:
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    # copy local copy that has been cloned already
    - cp -r . /tmp/phonetrack
    - mkdir -p /var/www/html ; pushd /var/www/html
    - git clone https://github.com/nextcloud/server.git --recursive --depth 1 -b master nextcloud
    # temporary fix of autoloader.php
    - sed -i $'s|if (substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|if (is_string($root) and substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|g' nextcloud/lib/autoloader.php
    - chown -R www-data:www-data nextcloud && pushd nextcloud/apps && mv /tmp/phonetrack ./
    - php /var/www/html/nextcloud/occ maintenance:install --database "sqlite" --admin-user "admin" --admin-pass "password"
    - php /var/www/html/nextcloud/occ app:enable phonetrack
    - php /var/www/html/nextcloud/occ maintenance:mode --off
    - popd ; popd ; mkdir coverage
    - phpunit --configuration /var/www/html/nextcloud/apps/phonetrack/phpunit.xml --coverage-text --color=never --coverage-html coverage

test_nc_pgsql:
  image: php:7.4
  stage: test
  only:
    refs:
      - master
      - test
  script:
    - docker-php-ext-install pdo_pgsql
    # copy local copy that has been cloned already
    - cp -r . /tmp/phonetrack
    - mkdir -p /var/www/html ; pushd /var/www/html
    - git clone https://github.com/nextcloud/server.git --recursive --depth 1 -b master nextcloud
    # temporary fix of autoloader.php
    - sed -i $'s|if (substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|if (is_string($root) and substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|g' nextcloud/lib/autoloader.php
    - chown -R www-data:www-data nextcloud && pushd nextcloud/apps && mv /tmp/phonetrack ./
    - php /var/www/html/nextcloud/occ maintenance:install --database "pgsql" --database-host "postgres" --database-name "$POSTGRES_DB" --database-user "$POSTGRES_USER" --database-pass="$POSTGRES_PASSWORD" --admin-user "admin" --admin-pass "password"
    - php /var/www/html/nextcloud/occ app:enable phonetrack
    - php /var/www/html/nextcloud/occ maintenance:mode --off
    - popd ; popd ; mkdir coverage
    - phpunit --configuration /var/www/html/nextcloud/apps/phonetrack/phpunit.xml

test_nc_mysql:
  image: php:7.4
  stage: test
  only:
    refs:
      - master
      - test
  script:
    - docker-php-ext-install  pdo_mysql
    # copy local copy that has been cloned already
    - cp -r . /tmp/phonetrack
    - mkdir -p /var/www/html ; pushd /var/www/html
    - git clone https://github.com/nextcloud/server.git --recursive --depth 1 -b master nextcloud
    # temporary fix of autoloader.php
    - sed -i $'s|if (substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|if (is_string($root) and substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|g' nextcloud/lib/autoloader.php
    - chown -R www-data:www-data nextcloud && pushd nextcloud/apps && mv /tmp/phonetrack ./
    - php /var/www/html/nextcloud/occ maintenance:install --database "mysql" --database-host "mariadb" --database-name "$MYSQL_DATABASE" --database-user "$MYSQL_USER" --database-pass="$MYSQL_ROOT_PASSWORD" --admin-user "admin" --admin-pass "password"
    - php /var/www/html/nextcloud/occ app:enable phonetrack
    - php /var/www/html/nextcloud/occ maintenance:mode --off
    - popd ; popd ; mkdir coverage
    - phpunit --configuration /var/www/html/nextcloud/apps/phonetrack/phpunit.xml

pages:
  stage: deploy
  dependencies:
    - test_nc_sqlite
  before_script:
    - echo 'nothing to install for pages jobs'
  only:
    refs:
      - master
  artifacts:
    paths:
      - public
  script:
    - sleep 5
    - mkdir public
    - mv coverage public/

build_nightly:
  stage: build
  only:
    refs:
      - build
  artifacts:
    paths:
      - phonetrack-nightly.tar.gz
  script:
    - npm install -g npm
    - make
    - version=nightly make appstore
    - mv /tmp/build/phonetrack-nightly.tar.gz ./
